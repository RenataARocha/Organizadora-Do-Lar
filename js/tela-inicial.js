document.addEventListener('DOMContentLoaded', function () {
  // üåº Frase do dia
  const frases = [
    "Voc√™ √© mais forte do que imagina üå∏",
    "Cada dia √© uma nova chance de recome√ßar ‚òÄÔ∏è",
    "Seja gentil consigo mesma üíï",
    "Organizar o dia √© o primeiro passo pra conquistar seus sonhos ‚ú®",
    "Pequenos passos tamb√©m s√£o progresso üö∂‚Äç‚ôÄÔ∏è",
    "Voc√™ d√° conta, sim! üå∑",
    "Respira fundo‚Ä¶ um passo de cada vez, voc√™ vai longe üåø",
    "Seu esfor√ßo de hoje √© o brilho de amanh√£ üí´",
    "N√£o precisa ser perfeito, s√≥ precisa ser feito üß∏",
    "Voc√™ est√° exatamente onde precisa estar para come√ßar üåà",
    "At√© os dias nublados preparam lindos recome√ßos ‚òÅÔ∏è‚ú®",
    "Confia no processo, voc√™ est√° crescendo mesmo sem perceber üå±",
    "Cuide de voc√™ como cuida de quem ama üß°",
    "Hoje √© um √≥timo dia pra se orgulhar do que voc√™ j√° conquistou üå∑",
    "Voc√™ j√° passou por tanta coisa‚Ä¶ e segue firme! Isso √© for√ßa ü¶ã",
    "Se cansar, respira. Mas n√£o desiste, t√°? üö∂‚Äç‚ôÄÔ∏èüí™"
  ];

  const fraseAleatoria = frases[Math.floor(Math.random() * frases.length)];
  const elementoFrase = document.getElementById("frase-do-dia");
  if (elementoFrase) {
    elementoFrase.textContent = fraseAleatoria;
  }

  // üß† Altern√¢ncia entre se√ß√µes (abre/fecha ao clicar)
  const botoes = document.querySelectorAll('.menu-principal .btn');
  const telas = document.querySelectorAll('.tela-oculta');

  botoes.forEach(botao => {
    botao.addEventListener('click', () => {
      const telaId = botao.getAttribute('data-tela');
      const tela = document.getElementById(telaId);

      if (tela.classList.contains('hidden')) {
        // Fecha todas e abre a clicada
        telas.forEach(t => t.classList.add('hidden'));
        tela.classList.remove('hidden');
      } else {
        // Fecha a clicada se j√° estiver aberta
        tela.classList.add('hidden');
      }
    });
  });
});



new Pikaday({
  field: document.getElementById('datepicker'),
  format: 'DD/MM/YYYY',
  i18n: {
    previousMonth: 'Anterior',
    nextMonth: 'Pr√≥ximo',
    months: ['Janeiro', 'Fevereiro', 'Mar√ßo', 'Abril', 'Maio', 'Junho', 'Julho', 'Agosto', 'Setembro', 'Outubro', 'Novembro', 'Dezembro'],
    weekdays: ['Domingo', 'Segunda', 'Ter√ßa', 'Quarta', 'Quinta', 'Sexta', 'S√°bado'],
    weekdaysShort: ['Dom', 'Seg', 'Ter', 'Qua', 'Qui', 'Sex', 'S√°b']
  }
});

